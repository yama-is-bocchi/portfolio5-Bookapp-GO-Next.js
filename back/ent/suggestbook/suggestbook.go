// Code generated by ent, DO NOT EDIT.

package suggestbook

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the suggestbook type in the database.
	Label = "suggest_book"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldKind holds the string denoting the kind field in the database.
	FieldKind = "kind"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldMemo holds the string denoting the memo field in the database.
	FieldMemo = "memo"
	// Table holds the table name of the suggestbook in the database.
	Table = "suggest_books"
)

// Columns holds all SQL columns for suggestbook fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldKind,
	FieldPrice,
	FieldMemo,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// KindValidator is a validator for the "kind" field. It is called by the builders before save.
	KindValidator func(string) error
	// PriceValidator is a validator for the "price" field. It is called by the builders before save.
	PriceValidator func(int) error
)

// OrderOption defines the ordering options for the SuggestBook queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}

// ByKind orders the results by the kind field.
func ByKind(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKind, opts...).ToFunc()
}

// ByPrice orders the results by the price field.
func ByPrice(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPrice, opts...).ToFunc()
}

// ByMemo orders the results by the memo field.
func ByMemo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMemo, opts...).ToFunc()
}
